pipeline {
  agent any
  options {
    // Connection is configured by the Jenkins Gitlab plugin
    // Manage Jenkins -> Configure System -> Gitlab
    gitLabConnection('gitlab-fm')
    // Keep only the 2 latest builds.
    buildDiscarder(logRotator(numToKeepStr: '2'))
    // Prepend all console output generated by the Pipeline run with the time at which the line was emitted
    timestamps()
  }
  triggers {
    gitlab(triggerOnPush: true, triggerOnMergeRequest: true, branchFilterType: 'All')
  }
  post {
    always {
      // clean up our workspace
      deleteDir()
    }
    failure {
      updateGitlabCommitStatus name: 'Hydro UI Pipeline', state: 'failed'
    }
    success {
      updateGitlabCommitStatus name: 'Hydro UI Pipeline', state: 'success'
    }
  }
  stages {
    stage('Yarn') {
      steps {
        updateGitlabCommitStatus name: 'hydro-web-pipeline', state: 'pending'
        sh 'yarn'
      }
    }
    stage('Dev Build') {
      steps {
        sh 'yarn build'
      }
    }
  }
}
